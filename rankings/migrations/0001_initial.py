# Generated by Django 5.2.1 on 2025-05-30 16:15

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('games', '0001_initial'),
        ('trophies', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RankingPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_type', models.CharField(choices=[('weekly', 'Weekly'), ('monthly', 'Monthly'), ('all_time', 'All Time')], max_length=20)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('rankings_calculated', models.BooleanField(default=False)),
                ('calculation_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rankings_rankingperiod',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='TrophyMilestone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('milestone_type', models.CharField(choices=[('first_platinum', 'First Platinum'), ('100_platinums', '100 Platinums'), ('souls_master', 'Souls-like Master'), ('speed_demon', 'Speed Completion'), ('rarity_hunter', 'Ultra Rare Hunter'), ('level_milestone', 'Level Milestone'), ('custom', 'Custom Achievement')], max_length=20)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('icon_class', models.CharField(default='fas fa-trophy', max_length=50)),
                ('score_threshold', models.IntegerField(blank=True, null=True)),
                ('achieved', models.BooleanField(default=False)),
                ('achieved_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('related_game', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='games.game')),
                ('related_trophy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='trophies.trophy')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='milestones', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'rankings_trophymilestone',
                'ordering': ['-achieved_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserRanking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('global_rank', models.IntegerField()),
                ('total_score', models.IntegerField()),
                ('souls_like_rank', models.IntegerField(blank=True, null=True)),
                ('souls_like_score', models.IntegerField(default=0)),
                ('indie_rank', models.IntegerField(blank=True, null=True)),
                ('indie_score', models.IntegerField(default=0)),
                ('aaa_rank', models.IntegerField(blank=True, null=True)),
                ('aaa_score', models.IntegerField(default=0)),
                ('trophies_earned_period', models.IntegerField(default=0)),
                ('platinum_earned_period', models.IntegerField(default=0)),
                ('calculated_at', models.DateTimeField(auto_now_add=True)),
                ('ranking_period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_rankings', to='rankings.rankingperiod')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rankings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'rankings_userranking',
                'ordering': ['global_rank'],
                'unique_together': {('user', 'ranking_period')},
            },
        ),
    ]
